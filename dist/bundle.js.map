{"version":3,"file":"bundle.js","mappings":"mBAAA,MAAM,EAA+BA,QCE/BC,EAAqBC,SAASC,eAAe,cAG7CC,EAAmB,CACrBC,QAAS,CACL,KAAQ,kBACR,SAAY,CACR,CACI,KAAQ,WACR,KAAQ,QACR,SAAY,CACR,CACI,KAAQ,QACR,KAAQ,eAEZ,CACI,KAAQ,QACR,KAAQ,qBAK5BC,KAAM,CACJC,UAAU,EACVC,OAAO,EACPC,WAAY,EACZC,SAAU,EACVC,SAAU,GACVC,WAAY,KAEdC,UAAU,GAGd,GAAIZ,EAAoB,CAEpB,MAAMa,EAAY,SAAeb,EAAoBG,GACrDW,QAAQC,IAAIF,E","sources":["webpack://blockly-typescript-webpack/external var \"Blockly\"","webpack://blockly-typescript-webpack/./src/index.ts"],"sourcesContent":["const __WEBPACK_NAMESPACE_OBJECT__ = Blockly;","import * as Blockly from 'blockly';\r\n\r\nconst workspaceContainer = document.getElementById('blocklyDiv');\r\n \r\n// Define the options for the workspace\r\nconst workspaceOptions = {\r\n    toolbox: {\r\n        \"kind\": \"categoryToolbox\",\t\r\n        \"contents\": [\r\n            {\r\n                \"kind\": \"category\",\r\n                \"name\": \"Logic\",\t\r\n                \"contents\": [\r\n                    {\r\n                        \"kind\": \"block\",\r\n                        \"type\": \"controls_if\"\r\n                    },\r\n                    {\r\n                        \"kind\": \"block\",\r\n                        \"type\": \"logic_compare\"\r\n                    },\r\n                ]\r\n            }]\r\n        },\r\n    zoom: {\r\n      controls: true,\r\n      wheel: true,\r\n      startScale: 1.0,\r\n      maxScale: 3,\r\n      minScale: 0.3,\r\n      scaleSpeed: 1.2\r\n    },\r\n    trashcan: true\r\n  };\r\n\r\nif (workspaceContainer) {\r\n  // Create the workspace with the container element and options\r\n    const workspace = Blockly.inject(workspaceContainer, workspaceOptions);\r\n    console.log(workspace)\r\n}"],"names":["Blockly","workspaceContainer","document","getElementById","workspaceOptions","toolbox","zoom","controls","wheel","startScale","maxScale","minScale","scaleSpeed","trashcan","workspace","console","log"],"sourceRoot":""}